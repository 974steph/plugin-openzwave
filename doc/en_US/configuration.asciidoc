== Plugin configuration

After downloading the plugin you just need to activate and configure it.

image:../images/configuration01.png[]

After activation, the daemon should start itself.
The plugin is preconfigured with default values, in general you don't need any further action.
However you can modify the configuration.


=== Dependencies
This section allows the validation and installation of the dependencies that are required for the Z-Wave plugin to operate (local as well are remote, here local)
image:../images/configuration02.png[]

** A status *OK* confirms the dependencies are satisfied.
** If the status is * NOK* you will have to reinstall the dependencies by clicking on the button.
image:../images/configuration03.png[]

[TIP]
Depending on your hardware, the update of dependencies could take more than 20 minutes.
Progress is updated in real time and a *Openzwave_update* log is accessible.

[IMPORTANT]
Updating dependencies is usually only required if the status is *NOK*, but you might, to solve some problems, reinstall the dependencies.
[TIP]
If your are in remote mode, the local dependencies can be *NOK*, this is normal.


=== Daemon
This sections allows you to validate the current state of the daemon(s) and to configure their automatic management.
image:../images/configuration04.png[]
The local daemon and all remote daemons will be displayed along with information on them.

** *Status* indicates that the daemon is currently running.
** *Configuration* indicated the configuration is valid. 
** The *(Re)Start* button allows you to (re)start the daemon.
** The button *Stop*, only visible if the automatic management has been deactivated, will halt the daemon.
** *Automatic management* allows Jeedom to automagically start the daemon when it starts up, or in case of problems. 
** *Last start* indicates the date of the last know start of the daemon.

=== Log
This sections allows to set the logging level and to visualize its content.

image:../images/configuration05.png[]

Select the level and save, the daemon will then restart with the desired information and traces logged.

The *Debug* or *Info* level can be used to udnerstand why the daemon crashes or does not report a value.

[IMPORTANT]
In *Debug* mode the daemon logs a lot of information, so it is recommended to only set this level if you have to detect the cause of a particular problem.
It is not recommended to leave the daemon running in *Debug* mode if you use a *SD-Card*.
When debugging is done, don't forget to return the log level to a normal level, such as *Error* which only reports possible errors.


=== Configuration
This sections allows to configure the general parameters of the plugin.
image:../images/configuration06.png[]

* *General* :
** *Automatically remove excluded devices* : if yes, will result in the excluded devices to be removed from the Z-Wave network. If no, excluded devices will still be in the network, and they will have to be manually deleted, or reused by assignment of a new Z-wave ID if one is migrating the primary controller.
** *Apply the recommended configuration on inclusion" : the configuration recommended by the Jeedom team will be automatically set post-inclusion.
** *Deactivate* the background update of the dimmers* : background updating of dimmers will not be performed.
** *Cycle(s)* : allows to define the frequency of the reports to Jeedom.
** *Z-Wave port" : the USB port on which the T-Wave interface is connected.
If you have a raZberry, you have, according to your architecture (RPI or Jeedomboard) 2 possibilities at the end of the list.
** *Server port* (dangerous to modify, has to be the same value on the remote Z-Wave Jeedoms) : allows to change to internal communication port of the daemon.
** *Backups* : allow to manage backups of the network's topology files (see below)
** *Modules config* : allows to manually update the OpenZWave configuration files with the modules' parameters and commands definitions.
[TIP]
The update of the modules' configurations is automatically done nightly.
[TIP]
There is no need to restart the daemon after updating the configuration files.
[IMPORTANT]
If you have an unknown module and a update of the configuration files is available, you can manually update them.

Once the configuration files have been updated, and according to their changes, you will have to :

** For a new module without any configuration nor command : exclude and reinclude the module.
** For a module for which only the parameters were updated : do a regeneration of the node's detection from the Action tab of the module (the plugin will restart).
** For a module for which the command mapping was corrected, use the magnifying glass, see below.
[TIP]
In case of doubt, exclude and reinclude the module.

Don't forget to
image:../images/configuration08.png[]
if you update something.

[IMPORTANT]
If you use Ubunto : for the daemon to work, you have to use Ubuntu 15.04 (older releases have a bug that prevents the daemon to start).
Warning : if you upgrade from 14.04 you have to re-start the installation of dependencies when 15.04 is installed.

[IMPORTANT]
The selection of the Z-Wave port in *Auto* detection mode is only suitable for USB dongles.


=== Mobile panel
image:../images/configuration09.png[]         

Allows to display or not the mobile panel when you use the application on a mobile phone or system.