== Health

image:../images/health01.png[]

This screen summarizes the state of your Z-Wave network :

image:../images/health02.png[]

You have here :

* *Module* : the name of your module ; clicking on it allows you to access it directly.
* *ID" : ID of your module in the Z-Wave network.
* *Notification* : last exchange type between the module and the controller.
* *Group* : indicates if the groups configuration is ok (controller part of at least one group). If nothing is displayed, the module does not implement the concept of group, this is normal.
* *Manufacturer* : indicates of the identification information of the module is ok.
* *Neighbor* : indicated if the list of the module's neighbors has been received.
* *Status* : indicated the interview status (query stage) of the module).
* *Battery* : level of the battery of the module (a mains icon indicates the module is mains powered).
* *Wakeup time* : for battery-powered modules, indicates the frequency in seconds of automatic wake-ups.
* *Total packets* : indicates the number of sent or received packets to or from the module.
* *%OK* : displays the percentage of successfully sent or received packets to or from the module.
* *Temporization* : displays the mean time required to send a packet to the module.
* * Last notification* : timestamp of the last notification received from  the module and planned moment of the next wake-up (for sleeping modules).
** It additionally can indicate if the node did not wake-up since the last restart of the daemon.
** and indicates of a node did not wake-up as expected.
* *Ping* : allows sending a series of messages to the node to test if it is operating normally.


[IMPORTANT]
The non-active devices are shown but no diagnostic information is displayed.


The name of the module can be followed by one or two images :

image:../images/health04.png[]
Modules implementing the COMMAND_CLASS_ZWAVE_PLUS_INFO

image:../images/health05.png[]
Modules implementing the COMMAND_CLASS_SECURITY and securely includedÂ 

image:../images/health06.png[]
Modules implementing the COMMAND_CLASS_SECURITY and not securely included.

image:../images/health07.png[]
FLIRS module, slave routing battery-powered modules that are frequently listening


[TIP]
the Ping command can be used if the module is presumed dead *DEATH* to check if it is really the case.

[TIP]
The modules that are sleeping will only respond to the ping at their next wake-up.

[TIP]
The timeout notification does not necessarily imply a problem with the module. Ping the module and it will in most cases answer with a *NoOperation* notification, confirming a successful Ping.

[TIP]
The temporization and the %OK on battery-powered nodes before having completed their interview are not relevant : the node will not answer to the controller's requests while it is in deep sleep.

[TIP]
The Z-Wave server automatically tests modules that are in timeout state after 15 minutes.

[TIP]
The server tries to automatically resuscitate modules that are presumed dead.

[TIP]
an alert will be sent to Jeedom if the module is presumed dead. You can set a notification to be informed as soon as possible : see the Messages Configuration section on the Jeedom configuration screen.

image:../images/health03.png[]

[TIP]
If on your routing table and/or on the Z-Wave health screen you have one or more modules that are named after their *generic name*, synchronization should remedy this situation.

[TIP]
If your routing table and/or on the Z-Wave health screen you have one or more modules that are named "Unknown", this indicated the interview was not successfully completed.
You probably have a *NOK* in the manufacturer column.
Open the detail screen of the module(s) to try proposed solutions (see repair and diagnostics section below).


=== Status of the interview

Interview stage of a module after the start of the daemon.

* *None* initialization of the node search process.
* *ProtocollInfo* Gathering of protocol information if the node is listening (listener) : its max speed and peripheral classes.
* *Probe* Ping the module to check if it is awake.
* *WakeUp" Start the wake-up process, if sleeping.
* *ManufacturerSpecific1* Gathering the name of the manufacturer and the product IDs if ProtocollInfo allows it.
* *NodeInfo* Gathering of the information on implemented command classes.
* *NodePlusInfo* Gathering of the ZWave+ capabilities and implemented command classes.
* *SecurityReport* Gathering of the list of command classes requiring security.
* *ManufacturerSpecific2* Gathering of the name of the manufacturer and the product IDs.
* *Versions* Gathering of the version information.
* *Instances* Gathering of the multi-instances command classes information. 
* *Static* Gathering of static information.
* *CacheLoad* Ping the module upon restart with its cached configuration.
* *Associations* Gathering of the associations information.
* *Neighbors* Gathering of the list of the neighbor nodes.
* *Session* Gathering of the session information (rarely change).
* *Dynamic* Gathering of the dynamic information (change often).
* *Configuration* Gathering of the configuration parameters information (only upon explicit request).
* *Complete* The interview process is completed for this node.

=== Notification

Details of the notifications sent by the modules.

* *Completed* Action successfully completed.
* *Timeout* Reporting of observed delay when sending a message.
* *NoOperation* Reporting of a successful Ping on tested node.
* *Awake* Indicates a node that just woke-up.
* *Sleep* Indicates the node is sleeping.
* *Dead* Indicates when a node is presumed dead.
* *Alive" Indicates when a node has restarted.