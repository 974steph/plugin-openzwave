== Modules configuration

Here you will find all the information on your module.

image:../images/node01.png[]

The screen has different tabs :

=== Summary

Provides a full summary of your module, including for instance the state of the queries allowing to determine if the module is expecting information or the list of its neighbors. 

[TIP]
On this tab you might have alerts if a configuration problem is detected. Jeedom will hint at how to fix them. Do not confused alerts with errors : alerts are in general just configuration recommendations.

=== Values

image:../images/node02.png[]

You will find here all the commands and possible states on your module. They are ordered by instance and command class and then by index. Mapping of the commands rely entirely on this information.

[TIP]
Force the update of a value. Battery-powered modules will only refresh a value upon their next wake up. It is however possible to manually wake up a module, refer to its documentation.

[TIP]
It is possible to have more commands here than in Jeedom and it is normal. In Jeedom commands were preselected for you.

[IMPORTANT]
Some modules do not automatically report their state. You have in this case to activate a manual refresh every 5 minutes on the desired values.
It is recommended to leave the refresh on automatic.
Frequent manual refreshes can negatively impact performance of the Z-Wave network. Use it only for the recommended values in the specific Jeedom documentation.
image:../images/node16.png[]
The set of values (index) of the instance of a command class will be reported when manually refreshing the smallest index of the instance of the command class.
Repeat as necessary for each instance.

=== Parameters

image:../images/node03.png[]

You can find here all the possibilities to configure your module as well as the possibility to copy the configuration of another already included modules.


When a parameter is modified, its line becomes yellow.
image:../images/node04.png[]
The parameter is waiting to be applied.

If the module accepts the parameter, its line becomes transparent.

If however the module refuses the value, its line will become red with the value that was returned by the module.
image:../images/node05.png[]


At inclusion, a new module is included with default factory parameters.
On some modules, functions might not be available without modifying one or more parameters.
Refer to the documentation of the modules and our recommendations to correctly parameterize your new modules.

[TIP]
the battery-powered modules will apply the changes of parameters only at their next wake up.
It is however possible to manually wake up a module, refer to its documentation.

[TIP]
The command *From...* allows you to reuse the configuration of another identical module on the current module.

image:../images/node06.png[]

[TIP]
The *Apply on...* command allows you to apply the current configuration of the module to one or several identical modules.

image:../images/node18.png[]

[TIP]
The command *Update the parameters* forces the module to update its parameters.

If no predefined configuration is defined for the module, a manual wizard allows you to apply parameters to it.
image:../images/node17.png[]
Please check out the documentation of the module to know the definition of the index, value and size.

=== Associations

From here you can manage the association groups of your module.

image:../images/node07.png[]

Z-Wave modules can control other modules directly, without going through the primary controller.
The relationship between a controlling module and another module is called association.

To control another module, the controlling module has to maintain a list of modules that will receive the commands.
Those lists are called association groups and are always linked to given events, such as the button
pressed, the setting off of a sensor...

If an event occurs, all the nodes recorded in the relevant association group will receive a *Basic* command.

[TIP]
Check out the documentation of the module to understand the different association groups and their behavior.

[TIP]
Most of the modules have an association group that is reserved for the primary controller. It is used to transmit module information to the controller. It is usually named *Report* or *LifeLine*.

[TIP]
It is possible your module has no group.

[TIP]
The update of the association groups will be applied at the next wake up.
It is however possible to manually wake up a module, refer to its documentation.

To know to which other modules the current module is associated, just click on the *Associated with which modules* menu.

image:../images/node08.png[]

The list of modules using the current module and the name of the association groups will be displayed.

=== Multi-instances associations

Some modules implement a multi-instance association command class.
When a module supports this CC, one can specify with which instance to create the association.

image:../images/node09.png[]

[IMPORTANT]
Given modules have to be associated with the instance 0 of the primary controller in order to work correctly.
For this reason, the controller is present with and without the instance 0.


=== Systems

Tab grouping the system parameters of the module.

image:../images/node10.png[]

[TIP]
Battery-powered modules wake up at regular intervals, called WakeUp Intervals. The interval is a compromise between maximal battery life and feedback frequency. To lengthen the battery life of your modules, choose for instance a value of 14400 seconds (4 hours), or more according to the specificity of the modules and their usage.
image:../images/node11.png[]

[TIP]
*Switches* and *Dimmer" modules can implement a special command class named "SwitchAll" 0x27. Here you can modify its behavior. According to the type of the module, several options are available. The *SwitchAll On/Off* can be sent from the primary controller.

=== Actions

Allows to carry on given actions on the module.

image:../images/node12.png[]

Given actions are only active depending on the type of the module and its capabilities and also its current state, for instance presumed dead.

[IMPORTANT]
Do not launch an action on a module if you don't know what its effects will be. Some action can not be reversed. Actions can assist in resolving issues with Z-Wave modules.

[TIP]
The "Regenaration of the detection of the node" will detect the module to retrieve its latest set parameters.
This action is required when you are informed that a parameters update is necessary for the module to operate correctly.
The regeneration of the node detection results in a network restart that will occur automatically.

[TIP]
If you have more than one module for which regeneration of the detection is required, it is possible to action it for all identical modules.

image:../images/node13.png[]

[TIP]
If a battery-powered module can no longer be reached and can not be excluded, you can launch the "Remove ghost node" action.
A wizard will do different actions so as to remove the module from the network. This will result in the network being restarted and can take several minutes before completing. 

image:../images/node14.png[]

Once started, it is recommended to close the module's configuration screen and check the removal of the node in the Z-Wave health screen.

[IMPORTANT]
Only battery-powered modules can be removed using this assistant.

=== Statistics

This tab displays communication statistics with the node. 

image:../images/node15.png[]

This information can be useful in the case of a module that is presumed *Dead* by the controller.